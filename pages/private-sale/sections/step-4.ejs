<div class="content breathing-room bg-colour fade" id="setp3">
  <div class="head">
    <h2>Step 4</h2>
    <small><i class="i-user-check"></i> Send Proof of Transaction</small>

  </div>
  <!-- <div class="flex"> -->

  <div class="flex">

    <div class="form">
      <div class="input-group">
        <label>First Name</label>
        <input type="text" class="first-name" />
      </div>
      <div class="input-group">
        <label>Last Name</label>
        <input type="text" class="last-name" />
      </div>

      <div class="input-group">
        <label>Email</label>
        <input type="text" class="email" />
      </div>
      <div class="input-group">
        <label>Mobile</label>
        <input type="text" class="mobile" />
      </div>
      <div class="input-group wide">
        <label>Zettahash (ZH) Wallet Address</label>
        <input type="text" class="address" />
      </div>
      <div class="input-group wide attachments-parent">
        <label>Attachments</label>
        <div class="attachments">
          <p>Drag and drop screenshots and images here.</p>
        </div>
        <div class="uploaded-gallery"></div>
      </div>

      <div class="input-group wide">
        <a class="btn submit">Submit</a>
      </div>
    </div>
    <div class="text-box">
      <!-- <h3>Add ZH Token to your Wallet</h3> -->
      <p>Send us screenshots of your transaction along with your <b>ZH Wallet Address</b>.</p>
      <br>
      <blockquote>
        <i class="i-alert-triangle"></i>We'll deposit ZH into your wallet within 24-hours of receiving and verifying
        your
        information.
      </blockquote>

      <!-- <a class="btn" href="#readMore">Read more <i class="i-arrow-right"></i></a> -->
    </div>
  </div>
</div>

</div>

<script>
  document.querySelector('.attachments-parent').addEventListener("dragover", (e) => {
    console.log("drag occurring")
    e.preventDefault()
  })
  document.querySelector('.attachments-parent').addEventListener("drop", (e) => {
    e.preventDefault()
    dropHandler(e)
  })
  const gallery = document.querySelector(".uploaded-gallery")
  function dropHandler(e) {
    console.log("File(s) dropped");

    // Prevent default behavior (Prevent file from being opened)
    e.preventDefault();

    if (e.dataTransfer.items) {
      //   console.log(e.dataTransfer.getData('text/plain'));
      //   // Use DataTransferItemList interface to access the file(s)
      //   [...e.dataTransfer.items].forEach((item, i) => {
      //     // If dropped items aren't files, reject them
      //     if (item.kind === "file") {
      //       if (item.type.indexOf('image') === 0) {
      //         console.log("file is an image")
      //         const file = item.getAsFile()
      //         console.log(item)
      //       }
      //       else {
      //         console.log("unsupported file type")
      //       }
      //     }
      //   });
      // } else {
      //   // Use DataTransfer interface to access the file(s)
      //   [...e.dataTransfer.files].forEach((file, i) => {
      //     console.log(`â€¦ file[${i}].name = ${file.name}`)
      //   });
      var url = e.dataTransfer.getData('text/plain');
      // for img elements, url is the img src so 
      // create an Image Object & draw to canvas
      if (url) {
        var img = new Image();
        img.onload = function () {
          // ctx.drawImage(this,0,0);
          console.log("imageData here", this)
          displayFile(this)
        }
        img.src = url;
        // for img file(s), read the file & draw to canvas
      } else {
        handleFiles(e.dataTransfer.files);
      }


    }
  }

  function handleFiles(files) {
    for (var i = 0; i < files.length; i++) {
      var file = files[i];
      var imageType = /image.*/;
      if (!file.type.match(imageType)) { continue; }
      var img = document.createElement("img");
      img.classList.add("obj");
      img.file = file;
      var reader = new FileReader();
      reader.onload = (function (aImg) {
        return function (e) {
          aImg.onload = function () {
            // ctx.drawImage(aImg,0,0);
            console.log("imageData", aImg)
            displayFile(aImg)
          }
          // e.target.result is a dataURL for the image
          aImg.src = e.target.result;
        };
      })(img);
      reader.readAsDataURL(file);
    } // end for
  } // end handleFiles

  function displayFile(img) {
    gallery.appendChild(img)
  }
</script>

<style lang="scss">
  @import './src/css/components/_constants.scss';

  .form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    max-width: calc(#{$content} / 2);
    width: 90vw;
    gap: 20px;
    padding: 30px;
    box-shadow: 0 0 4px -1px var(--primary);
    border-radius: 30px;
    background: var(--neutral-9);
    margin: 40px auto;

    .input-group {
      &.wide {
        grid-column: 1/3;
      }

      display: grid;
      gap: 10px;

      label {
        font-family: $sans-serif;
        font-weight: 700;
        color: var(--neutral-4);
      }

      input {
        border: 0;
        font-size: 22px;
        padding: 10px 15px;
        border-radius: 10px;
        background: var(--neutral-8);
        width: 100%;
        font-family: $sans-serif;
        color: var(--neutral-1);

        &:focus {
          outline: none;
        }
      }

      .submit {
        text-align: center;
        margin: auto;
      }
    }
  }

  .attachments {
    display: flex;
    box-shadow: 0 0 0 1px var(--primary);
    padding: 20px;
    border-radius: 10px;
    justify-content: center;
    color: var(--primary);
  }

  .uploaded-gallery {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 20px;

    img {
      max-width: 150px;
      max-height: 250px;
      margin-bottom: auto;
    }
  }

</style>
